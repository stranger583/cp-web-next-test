name: Beta Auto Merge

on:
  workflow_dispatch:

env:
  CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
  CLICKUP_LIST_ID: ${{ secrets.CLICKUP_LIST_ID }}
  REPOSITORY_NAME: "cp-web-next-test"
  BRANCH_PREFIX_BETA: "beta/sprint"
  MAX_RETRY_ATTEMPTS: 3

jobs:
  beta_merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: "master"
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Setup Environment
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          branch_type: "beta"

      - name: Create Beta Branch
        id: create_beta
        run: |
          BETA_BRANCH="${{ steps.setup.outputs.branch_name }}"
          echo "📅 Creating beta branch: $BETA_BRANCH"

          if git ls-remote --exit-code --heads origin $BETA_BRANCH >/dev/null 2>&1; then
            echo "⚠️ Beta branch $BETA_BRANCH already exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "✨ Creating new beta branch: $BETA_BRANCH"
            git checkout -b $BETA_BRANCH
            git push origin $BETA_BRANCH
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

          echo "branch_name=$BETA_BRANCH" >> $GITHUB_OUTPUT

      - name: Process Beta Tasks
        id: process_beta
        uses: ./.github/actions/clickup-tasks
        with:
          status: "beta"
          branch_name: ${{ steps.create_beta.outputs.branch_name }}

      - name: Move Beta Tag
        id: move_beta_tag
        if: steps.process_beta.outputs.process_success == 'true'
        uses: ./.github/actions/move-tag
        with:
          merged_count: ${{ steps.process_beta.outputs.merged_count }}
          failed_count: ${{ steps.process_beta.outputs.failed_count }}
          tag_name: "beta"
          branch_name: ${{ steps.create_beta.outputs.branch_name }}
          step_name: "beta"

      - name: Notify Beta Move Tag Success
        if: steps.move_beta_tag.outputs.tag_moved == 'true'
        uses: ./.github/actions/notify-chat
        with:
          name: "Beta Move Tag Success"
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          type: "tag_success"
          branch_type: "beta"
          branch_name: ${{ steps.create_beta.outputs.branch_name }}
          merged_count: ${{ steps.process_beta.outputs.merged_count }}
          total_tasks: ${{ steps.process_beta.outputs.total_tasks }}

      - name: Notify Beta Merge Success
        if: steps.process_beta.outputs.merged_count > 0 && steps.process_beta.outputs.failed_count == 0
        uses: ./.github/actions/notify-chat
        with:
          name: "Beta Merge Success"
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          type: "success"
          branch_type: "beta"
          branch_name: ${{ steps.create_beta.outputs.branch_name }}
          merged_count: ${{ steps.process_beta.outputs.merged_count }}
          total_tasks: ${{ steps.process_beta.outputs.total_tasks }}
          tag_moved: ${{ steps.move_beta_tag.outputs.tag_moved == 'true' && 'Yes (beta)' || 'No' }}

      - name: Notify Beta Merge Error
        if: steps.process_beta.outputs.failed_count > 0
        uses: ./.github/actions/notify-chat
        with:
          name: "Beta Merge Error"
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          type: "error"
          branch_type: "beta"
          branch_name: ${{ steps.create_beta.outputs.branch_name }}
          failed_tasks: ${{ steps.process_beta.outputs.failed_tasks_str }}
          failed_branches: ${{ steps.create_beta.outputs.branch_name }}

      - name: Trigger Delta Workflow
        if: steps.process_beta.outputs.process_success == 'true' && (steps.process_beta.outputs.all_tasks_merged == 'true' || steps.process_beta.outputs.has_tasks == 'false')
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'delta-auto-merge.yml',
              ref: 'master'
            });
            console.log('✅ Delta workflow triggered successfully');

      - name: Generate Summary
        if: always()
        run: |
          BETA_BRANCH="${{ steps.create_beta.outputs.branch_name }}"
          BETA_MERGED="${{ steps.process_beta.outputs.merged_count }}"
          BETA_TOTAL="${{ steps.process_beta.outputs.total_tasks }}"
          BETA_FAILED="${{ steps.process_beta.outputs.failed_count }}"
          BETA_TAG_MOVED="${{ steps.move_beta_tag.outputs.tag_moved }}"
          DELTA_TRIGGERED="${{ steps.process_beta.outputs.process_success == 'true' && (steps.process_beta.outputs.all_tasks_merged == 'true' || steps.process_beta.outputs.has_tasks == 'false') }}"

          echo "📋 Beta Status Summary:"
          echo "   Branch: $BETA_BRANCH"
          echo "   Tasks: $BETA_MERGED/$BETA_TOTAL"
          echo "   Failed: $BETA_FAILED"
          if [ "$BETA_TAG_MOVED" = "true" ]; then
            echo "   Tag moved: beta"
          fi
          if [ "$DELTA_TRIGGERED" = "true" ]; then
            echo "   Delta workflow: triggered"
          fi

          {
            echo "## 📊 Beta Branch Summary"
            echo ""
            echo "**🔵 Beta Branch:** \`$BETA_BRANCH\`"
            echo "**📈 Tasks:** $BETA_MERGED/$BETA_TOTAL merged"
            echo "**❌ Failed:** $BETA_FAILED"
            if [ "$BETA_TAG_MOVED" = "true" ]; then
              echo "**🏷️ Tag:** \`beta\` (moved to current commit)"
            fi
            if [ "$DELTA_TRIGGERED" = "true" ]; then
              echo "**🚀 Delta:** Workflow triggered automatically"
            fi
            echo ""
            echo "**🕐 Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          } >> $GITHUB_STEP_SUMMARY
