name: Delta Auto Merge

on:
  workflow_dispatch:

env:
  CLICKUP_API_TOKEN: ${{ secrets.CLICKUP_API_TOKEN }}
  CLICKUP_LIST_ID: ${{ secrets.CLICKUP_LIST_ID }}
  REPOSITORY_NAME: "cp-web-next-test"
  BRANCH_PREFIX_DELTA: "delta/sprint"
  MAX_RETRY_ATTEMPTS: 3

jobs:
  delta_merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: "master"
          fetch-depth: 0
          token: ${{ secrets.GH_PAT_FOR_WORKFLOW_PUSH }}

      - name: Setup Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'

      - name: Setup Environment
        id: setup
        uses: ./.github/actions/setup-environment
        with:
          branch_type: "delta"

      - name: Find Beta Branch
        id: find_beta
        run: |
          # Get current week info
          YEAR=$(date +'%y')
          WEEK=$(date +'%V')
          BETA_BRANCH="beta/sprint-${YEAR}${WEEK}"

          echo "🔍 Looking for beta branch: $BETA_BRANCH"

          if git ls-remote --exit-code --heads origin $BETA_BRANCH >/dev/null 2>&1; then
            echo "✅ Found beta branch: $BETA_BRANCH"
            echo "beta_branch=$BETA_BRANCH" >> $GITHUB_OUTPUT
            echo "beta_exists=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Beta branch $BETA_BRANCH not found, will create delta from master"
            echo "beta_branch=$BETA_BRANCH" >> $GITHUB_OUTPUT
            echo "beta_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Delta Branch
        id: create_delta
        run: |
          DELTA_BRANCH="${{ steps.setup.outputs.branch_name }}"
          BETA_BRANCH="${{ steps.find_beta.outputs.beta_branch }}"
          BETA_EXISTS="${{ steps.find_beta.outputs.beta_exists }}"

          echo "📅 Creating delta branch: $DELTA_BRANCH"

          if git ls-remote --exit-code --heads origin $DELTA_BRANCH >/dev/null 2>&1; then
            echo "⚠️ Delta branch $DELTA_BRANCH already exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
            echo "branch_created=false" >> $GITHUB_OUTPUT
          else
            if [ "$BETA_EXISTS" = "true" ]; then
              echo "✨ Creating new delta branch from beta branch: $BETA_BRANCH"
              # Checkout to beta branch first
              git checkout $BETA_BRANCH
              git pull origin $BETA_BRANCH
            else
              echo "✨ Creating new delta branch from master (beta not found)"
              # Stay on master branch
              git checkout master
              git pull origin master
            fi
            
            # Create delta branch
            git checkout -b $DELTA_BRANCH
            git push origin $DELTA_BRANCH
            echo "branch_exists=false" >> $GITHUB_OUTPUT
            echo "branch_created=true" >> $GITHUB_OUTPUT
          fi

          echo "branch_name=$DELTA_BRANCH" >> $GITHUB_OUTPUT

      - name: Process Delta Tasks
        id: process_delta
        uses: stranger583/cp-web-next-test/.github/actions/clickup-tasks@master
        with:
          status: "delta"
          branch_name: ${{ steps.create_delta.outputs.branch_name }}
          pat_token: ${{ secrets.GH_PAT_FOR_WORKFLOW_PUSH }}

      - name: Move Delta Tag
        id: move_delta_tag
        if: steps.process_delta.outputs.process_success == 'true'
        uses: stranger583/cp-web-next-test/.github/actions/move-tag@master
        with:
          merged_count: ${{ steps.process_delta.outputs.merged_count }}
          failed_count: ${{ steps.process_delta.outputs.failed_count }}
          tag_name: "delta"
          branch_name: ${{ steps.create_delta.outputs.branch_name }}
          step_name: "delta"
          # 💡 新增這一行來傳遞 PAT
          pat_token: ${{ secrets.GH_PAT_FOR_WORKFLOW_PUSH }} # 使用您在步驟 2 創建的 Secret 名稱

      - name: Notify Delta Merge Success
        if: steps.process_delta.outputs.merged_count > 0 && steps.process_delta.outputs.failed_count == 0
        uses: ./.github/actions/notify-chat
        with:
          name: "Delta Merge Success"
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          type: "success"
          branch_type: "delta"
          branch_name: ${{ steps.create_delta.outputs.branch_name }}
          merged_count: ${{ steps.process_delta.outputs.merged_count }}
          total_tasks: ${{ steps.process_delta.outputs.total_tasks }}
          tag_moved: ${{ steps.move_delta_tag.outputs.tag_moved }}

      - name: Notify Delta Merge Error
        if: steps.process_delta.outputs.failed_count > 0
        uses: ./.github/actions/notify-chat
        with:
          name: "Delta Merge Error"
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          type: "error"
          branch_type: "delta"
          branch_name: ${{ steps.create_delta.outputs.branch_name }}
          merged_count: ${{ steps.process_delta.outputs.merged_count }}
          total_tasks: ${{ steps.process_delta.outputs.total_tasks }}
          failed_count: ${{ steps.process_delta.outputs.failed_count }}
          failed_tasks: ${{ steps.process_delta.outputs.failed_tasks_str }}
          failed_assignees: ${{ steps.process_delta.outputs.failed_assignees }}
          failed_branches: ${{ steps.create_delta.outputs.branch_name }}

      - name: Generate Summary
        if: always()
        run: |
          BETA_BRANCH="${{ steps.find_beta.outputs.beta_branch }}"
          BETA_EXISTS="${{ steps.find_beta.outputs.beta_exists }}"
          DELTA_BRANCH="${{ steps.create_delta.outputs.branch_name }}"
          DELTA_MERGED="${{ steps.process_delta.outputs.merged_count }}"
          DELTA_TOTAL="${{ steps.process_delta.outputs.total_tasks }}"
          DELTA_FAILED="${{ steps.process_delta.outputs.failed_count }}"
          DELTA_TAG_MOVED="${{ steps.move_delta_tag.outputs.tag_moved }}"

          echo "📋 Delta Status Summary:"
          echo "   Beta branch: $BETA_BRANCH (exists: $BETA_EXISTS)"
          echo "   Delta branch: $DELTA_BRANCH"
          echo "   Tasks: $DELTA_MERGED/$DELTA_TOTAL"
          echo "   Failed: $DELTA_FAILED"
          if [ "$DELTA_TAG_MOVED" = "true" ]; then
            echo "   Tag moved: delta"
          fi

          {
            echo "## 📊 Delta Branch Summary"
            echo ""
            if [ "$BETA_EXISTS" = "true" ]; then
              echo "**🔵 Source Beta Branch:** \`$BETA_BRANCH\`"
            else
              echo "**❌ Beta Branch:** Not found"
            fi
            echo "**🟡 Delta Branch:** \`$DELTA_BRANCH\`"
            echo "**📈 Tasks:** $DELTA_MERGED/$DELTA_TOTAL merged"
            echo "**❌ Failed:** $DELTA_FAILED"
            if [ "$DELTA_TAG_MOVED" = "true" ]; then
              echo "**🏷️ Tag:** \`delta\` (moved to current commit)"
            fi
            echo ""
            echo "**🕐 Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          } >> $GITHUB_STEP_SUMMARY
